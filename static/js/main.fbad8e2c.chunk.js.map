{"version":3,"sources":["App.js","Footer.js","index.js"],"names":["DEFAULT_developers","DEFAULT_dev_per_hour","DEFAULT_hours","App","useState","devPerHour","setSevPerHour","developers","setDevelopers","numHours","setNumHours","output","useMemo","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","role","className","class","onChange","event","inNumHour","target","value","type","step","min","max","inDevs","inPerHour","format","id","Footer","href","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oLAIMA,EAAqB,EACrBC,EAAuB,IACvBC,EAAgB,GAKP,SAASC,IACtB,MAAoCC,mBAASH,GAAqB,mBAA3DI,EAAU,KAAEC,EAAa,KAChC,EAAoCF,mBAASJ,GAAmB,mBAAzDO,EAAU,KAAEC,EAAa,KAChC,EAAgCJ,mBAASF,GAAc,mBAAhDO,EAAQ,KAAEC,EAAW,KAiB5B,IAAMC,EAASC,mBAAQ,WAErB,OADcL,EAAaF,EAAaI,CAE1C,GAAG,CAACF,EAAYF,EAAYI,IAMtBI,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAIzB,OACE,iCACE,+BACE,uBAAMC,KAAK,MAAM,aAAW,SAAQ,UAAC,SACjC,OACG,uBAGT,sBAAKC,UAAU,gBAAe,UAC5B,oBAAGC,MAAM,gBAAe,UACtB,uBAAMF,KAAK,MAAM,aAAW,aAAY,UAAC,SACrC,OACG,kBACSV,EAAS,OAAKA,EAAW,GAAG,YAE9C,uBACEW,UAAU,eACVE,SAhDR,SAA0BC,GACxB,IAAMC,EAAYD,EAAME,OAAOC,MAC/BhB,EAAYc,EACd,EA8CQG,KAAK,QACLC,KAAK,IACLC,IAAI,IACJC,IAAI,MACJJ,MAAOjB,IAET,oBAAGY,MAAM,gBAAe,UAAC,0DAAqBd,EAAW,OACzD,uBACEa,UAAU,eACVE,SAhDR,SAA4BC,GAC1B,IAAMQ,EAASR,EAAME,OAAOC,MAC5BlB,EAAcuB,EAChB,EA8CQJ,KAAK,QACLC,KAAK,IACLC,IAAI,IACJC,IAAI,KACJJ,MAAOnB,IAET,oBAAGc,MAAM,gBAAe,UAAC,gCAAoBhB,EAAW,WACxD,uBACEe,UAAU,eACVE,SA/DR,SAA4BC,GAC1B,IAAMS,EAAYT,EAAME,OAAOC,MAC/BpB,EAAc0B,EAChB,EA6DQL,KAAK,QACLE,IAAI,MACJC,IAAI,MACJF,KAAK,KACLF,MAAOrB,OAGX,sBAAKe,UAAU,iBAAgB,UAC7B,4BAAG,0BACH,mBAAGA,UAAU,SAAQ,SAAEP,EAAUoB,OAAOtB,QAG1C,qBAAKuB,GAAG,QAAO,SAAC,kEAKtB,CClGe,SAASC,IACtB,OACE,sBAAKf,UAAU,SAAQ,UACrB,mBAAGgB,KAAK,gCAAgCX,OAAO,SAAQ,SAAC,uBAGxD,uBACA,gCAAO,wBAGb,CCPA,IAAMY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,eAAC,aAAU,WACT,cAACtC,EAAG,IACJ,cAACgC,EAAM,OAETE,E","file":"static/js/main.fbad8e2c.chunk.js","sourcesContent":["import { useMemo, useState } from \"react\";\nimport \"./styles.css\";\n\n// Some defaults to kick the party\nconst DEFAULT_developers = 2;\nconst DEFAULT_dev_per_hour = 250;\nconst DEFAULT_hours = 40;\n\n//\n// Start the ü•Ç\n//\nexport default function App() {\n  const [devPerHour, setSevPerHour] = useState(DEFAULT_dev_per_hour);\n  const [developers, setDevelopers] = useState(DEFAULT_developers);\n  const [numHours, setNumHours] = useState(DEFAULT_hours);\n\n  function onNumHoursChange(event) {\n    const inNumHour = event.target.value;\n    setNumHours(inNumHour);\n  }\n\n  function onDevPerHourChange(event) {\n    const inPerHour = event.target.value;\n    setSevPerHour(inPerHour);\n  }\n\n  function onDevelopersChange(event) {\n    const inDevs = event.target.value;\n    setDevelopers(inDevs);\n  }\n\n  const output = useMemo(() => {\n    const total = developers * devPerHour * numHours;\n    return total;\n  }, [developers, devPerHour, numHours]);\n\n  // Create our number formatter.\n  // These options are needed to round to whole numbers if that's what you want.\n  // minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  // maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0\n  });\n\n  // Finnaly, our output markup\n  return (\n    <main>\n      <h1>\n        <span role=\"img\" aria-label=\"coffee\">\n          ‚òï{\" \"}\n        </span>\n        Project Estimator\n      </h1>\n      <div className=\"input-section\">\n        <p class=\"slider-output\">\n          <span role=\"img\" aria-label=\"hour-glass\">\n            ‚è≥{\" \"}\n          </span>\n          Project hours: {numHours}h (~{numHours / 40} week)\n        </p>\n        <input\n          className=\"input-slider\"\n          onChange={onNumHoursChange}\n          type=\"range\"\n          step=\"1\"\n          min=\"5\"\n          max=\"400\"\n          value={numHours}\n        />\n        <p class=\"slider-output\">üë©üèΩ‚Äçüíª Developers: {developers} </p>\n        <input\n          className=\"input-slider\"\n          onChange={onDevelopersChange}\n          type=\"range\"\n          step=\"1\"\n          min=\"1\"\n          max=\"10\"\n          value={developers}\n        />\n        <p class=\"slider-output\">üí∞ Cost per hour: ${devPerHour}/hour</p>\n        <input\n          className=\"input-slider\"\n          onChange={onDevPerHourChange}\n          type=\"range\"\n          min=\"100\"\n          max=\"650\"\n          step=\"50\"\n          value={devPerHour}\n        />\n      </div>\n      <div className=\"output-section\">\n        <p>The Project will cost</p>\n        <p className=\"output\">{formatter.format(output)}</p>\n      </div>\n\n      <div id=\"quote\">\n        \"The most difficult thing in any project is estimating it.\"\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\nimport \"./styles.css\";\n\n//\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <a href=\"https://ido-green.appspot.com\" target=\"_blank\">\n        Ido's Talks &amp; Code\n      </a>\n      <br />\n      <small>Updated: Feb 2023</small>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport Footer from \"./Footer\";\n\n//\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n    <Footer />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}